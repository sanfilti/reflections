When would you want to create a remote repository rather than keeping all your work local?

  Create a remote repository when you want someone to collaborate with on your work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date 
with your remote repository?

  Manually pulling changes assures that you get only the changes that you want, and not any commits that might 
  simply be testing commits.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

 	forks - only done from GitHub to GitHub repositories.  Same as clone.
 	clone - can be done local to local, local to remote and remote to local.   Makes exact
 	copy of a repository.
 	branches - can be done on local and remote repositories.  Creates a new branch of the existing repository
 	and allows for testing of new features/bug fixes/etc without changing the existing
 	branch.

 What is the benefit of having a copy of the last known state of the remote stored locally?

 	The benefit of having the last known state of the remote repo stored locally is that
 	your local repo is then not far off commits when you got to pull from the remote again.

 How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

 	You could use some online collaboration tool, such as DropBox or Google Docs.  Or, simply send documents back
 	and forth.
 	GitHub makes it much easier.

 When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

 	You would make changes in a separate branch when you are trying something experimental or testing a new feature
 	that is not 100% ready for the master branch.  
 	Sticking everything in the main branch simplifies the repository, but doesn't allow for testing of 
 	new features unless you are sure they work.

 	
 	
